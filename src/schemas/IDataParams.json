{
  "type": "object",
  "properties": {
    "data": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/wavesplatform/tx-json-schemas/master/src/schemas/IDataParams.json#/definitions/IBooleanData"
              },
              {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  }
                },
                "required": [
                  "key"
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/wavesplatform/tx-json-schemas/master/src/schemas/IDataParams.json#/definitions/IIntegerData<TChainId>"
              },
              {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  }
                },
                "required": [
                  "key"
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/wavesplatform/tx-json-schemas/master/src/schemas/IDataParams.json#/definitions/IStringData"
              },
              {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  }
                },
                "required": [
                  "key"
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "https://raw.githubusercontent.com/wavesplatform/tx-json-schemas/master/src/schemas/IDataParams.json#/definitions/IBinaryData"
              },
              {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string"
                  }
                },
                "required": [
                  "key"
                ]
              }
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "null"
              },
              "value": {
                "type": "null"
              },
              "key": {
                "type": "string"
              }
            },
            "required": [
              "key"
            ]
          },
          {
            "$ref": "https://raw.githubusercontent.com/wavesplatform/tx-json-schemas/master/src/schemas/IDataParams.json#/definitions/ITypelessDataEntry"
          }
        ]
      }
    },
    "version": {
      "description": "Transaction version. If not set, the latest available version will be used.",
      "type": "number"
    },
    "fee": {
      "description": "Transaction fee. If not set, fee will be calculated automatically",
      "$ref": "https://raw.githubusercontent.com/wavesplatform/tx-json-schemas/master/src/schemas/IDataParams.json#/definitions/LONG"
    },
    "additionalFee": {
      "description": "If fee is not set, this value will be added to automatically calculated fee. E.x.:\nAccount is scripted and 400000 fee more is required.",
      "type": "number"
    },
    "senderPublicKey": {
      "description": "If not set, public key will be derived from seed phrase. You should provide senderPublicKey in two cases:\n1. Account, from which this tx should be sent, differs from tx signer. E.g., we have smart account that requires 2 signatures.\n2. You to create tx without proof. Therefore no seed is provided.",
      "type": "string"
    },
    "timestamp": {
      "description": "Transaction timestamp. If not set current timestamp will be used. Date.now()",
      "type": "number"
    },
    "chainId": {
      "description": "Network byte. Could be set as number or as char.\nIf set as char(string), charCodeAt(0) will be used. E.g.,\n'W' will be converted to '87'\nIf not set, 87 will be used as default",
      "type": [
        "string",
        "number"
      ]
    }
  },
  "required": [
    "data"
  ],
  "definitions": {
    "IBooleanData": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "boolean"
          ]
        },
        "value": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "IIntegerData<TChainId>": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "integer"
          ]
        },
        "value": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "IStringData": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "string"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "IBinaryData": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "binary"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "ITypelessDataEntry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "anyOf": [
            {
              "description": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\nrequested number of bytes could not be allocated an exception is raised.",
              "type": "object",
              "additionalProperties": false,
              "patternProperties": {
                "^[0-9]+$": {
                  "type": "number"
                }
              }
            },
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "type": [
                "string",
                "number",
                "boolean"
              ]
            }
          ]
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "LONG": {
      "type": [
        "number"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/wavesplatform/tx-json-schemas/master/src/schemas/IDataParams.json"
}